################################################
# OCaml Flags
#

OCAML_OTHER_LIBS = unix str
OCAMLFLAGS += -dtypes
OCAMLINCLUDES += $(dir ext)
BYTE_ENABLED = true

OUNIT = $(file ext/oUnit)

.SUBDIRS: ext
    if $(file-exists OMakefile)
       include OMakefile


################################################
# Main Program
#

OCamlGeneratedFiles(parser.ml lexer.ml)

version.ml:
    echo 'let version = "$(VERSION)"' > version.ml

FILES[] =
    version
    debug
    depend
    term
    unify
    graph
    subordination
    metaterm
    parser
    lexer
    accumulate
    typing
    tactics
    prover
    context
    abella_types
    extensions

MAIN = abella

OCamlProgram(abella, $(FILES) $(MAIN))


################################################
# Unit Testing
#

TEST_FILES[] =
    test_helper
    $(rootname $(find . -name *_test.ml))
    test

TEST = unit_test

.PHONY: test
test: $(OCamlProgram $(TEST), $(OUNIT) $(FILES) $(TEST_FILES))
    ./$(TEST) -verbose
